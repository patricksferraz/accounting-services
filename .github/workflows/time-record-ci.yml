name: Time Record - Continuous Integration (CI)

on:
  pull_request:
    branches: [ time-record-service, dev-time-record-service ]
  push:
    branches: [ time-record-service, dev-time-record-service ]

jobs:

  docker:
    strategy:
      matrix:
        mongodb-version: [4.4]

    services:
      mongodb:
        image: mongo:${{ matrix.mongodb-version }}
        ports:
          - 27017:27017

    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        SERVICE=time-record
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        if [ "${BRANCH_NAME}" == "dev-${SERVICE}-service" ]; then
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/${SERVICE}-service:develop-
        fi
        if [ "${BRANCH_NAME}" == "${SERVICE}-service" ]; then
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/${SERVICE}-service:
        fi
        TAGS="${DOCKER_IMAGE}$(git rev-parse --short HEAD),${DOCKER_IMAGE}latest"
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=service::${SERVICE}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
          driver-opts: network=host

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to ghcr
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Test
      id: docker_test
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        file: .docker/Dockerfile.test
        build-args: >
          SERVICE=${{ steps.prep.outputs.service }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      if: github.event_name != 'pull_request'
      with:
        builder: ${{ steps.buildx.outputs.name }}
        file: .docker/Dockerfile.prod
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        target: runtime
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: >
          SERVICE=${{ steps.prep.outputs.service }}

    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.docker_build.outputs.digest }}
